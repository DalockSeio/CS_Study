좋은 코드란 무엇인가?
좋은 코드란 아래의 원칙을 준수하면서 프로젝트의 목표와 요구사항을 충족시키는 코드이다.
지속적인 개선을 통해 코드의 품질을 유지하고 향상시켜야 한다.
1. 가독성 : 사람이 쉽게 이해하고 수정할 수 있어야 한다.
변수와 함수의 이름은 명확하고 의미있게 지어야 하며 들여쓰기, 공백 등의 포맷팅 규칙을 다라야한다.
2. 모듈화 : 작은 모듈로  나누어져 있어야 한다.
각 모듈은 특정 기능과 역할을 수행한다.
모듈 간의 의존성은 최소화되어야 한다.
3. 재사용성 : 중복을 피하고, 비슷한 작업을 수행할 때 재사용 가능한 함수나 클래스 등의 추상화를 활용해야 한다.
4. 효율성 : 메모리, cpu 등과 같은 자원을 효율적으로 사용해야 한다.
불필요한 반복문,연산을 최소화하고 최적화 기법을 활용해야 한다.
5. 안정성 : 오류, 예외 상황을 처리할 수 있어야 하며 안정적으로 동작해야 한다.
예상치 못한 입력, 상황에 대비한 오류 처리가 필요하다.
6. 테스트 가능성 : 테스트하기 쉬워야 한다.
단위 테스트, 통합 테스트 등을 통해 코드의 동작을 검증할 수 있어야 한다.
7. 문서화 : 코드에는 주석이나 문서화가 충분히 포함되어야 한다.
다른 개발자들이 코드를 이해하고, 사용할 수 있도록 설명이 제공되어야 한다.
8. 일관성 : 일관된 스타일과 패턴을 따라야 한다.
프로젝트 전체에서 동일한 코딩 규칙을 준수해야 한다.
9. 확장성 : 새로운 요구사항에 쉽게 대응할 수 있도록 설계되어야 한다.
새로운 기능을 추가,변경할 때 코드의 수정을 최소화할 수 있어야 한다.
10. 성능 : 필요한 성능을 제공해야 한다.
대규모 시스템에서는 성능 최적화가 중요하다.
