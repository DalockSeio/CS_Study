# 3.2 관계형 데이터베이스

# 3.2.1 키

키(key)

: DB에서 튜플을 구분하기 위한 속성 또는 속성의 집합.

- 유일성: 하나의 키 값으로 튜플을 식별할 수 있는 특성
- 최소성: 튜플을 식별하는 데 필요한 속성만으로 이루어져 있는 특성

DBMS(Database Management System, 데이터베이스 관리 시스템)의 다섯 가지 키

- 수퍼 키: 튜플 식별 가능. 유일성 만족. 후보 키와 달리 최소성을 만족하지 않아도 됨
- 후보 키: 튜플을 식별할 수 있는 유일성과 필요한 속성만으로 구성되는 최소성을 만족해야함
- 기본 키: 후보 키 중에서 메인이 되는 키로 NULL 값을 가지면 안 된다.
- 대체 키: 후보 키 중 기본 키를 제외한 키다.
- 외래 키: 다른 테이블의 기본 키를 참조하는 키다.

슈퍼 키 > 후보 키 > 기본 키, 대체 키

# 3.2.2 무결성

무결성

: 데이터베이스에 저장된 데이터와 실제 데이터가 일치하는 정확성과, 데이터가 일정하게 유지되는 일관성을 의미.

- 개체 무결성: 모든 테이블이 기본 키를 가져야 한다. NULL이 될 수 없고 중복되지 않으며 고유한 값을 가진다.
- 도메인 무결성: 테이블의 속성 값은 도메인에 속해야 한다. 도메인은 속성이 가질 수 있는 값의 집합을 의미
- 참조 무결성: 외래 키의 값은 참조하는 테이블의 기본 키 값과 동일하거나 NULL이어야 한다.

# 3.2.3 인덱스

인덱스: 데이터베이스에서 튜플의 검색 성능을 높이기 위해 속성 값과 튜플이 저장된 주소를 저장하는 것.

키-값 형태로 ‘속성 값- 튜플 주소’를 인덱스 테이블에 저장한다.

장점

- 인덱스 테이블에 데이터가 정렬되어 있어 검색 속도가 빠름.

단점

- 인덱스 테이블 저장을 위한 추가 공간 필요
- 정렬된 상태 유지를 위해 테이터 추가, 수정, 삭제하는 경우에는 속도가 느림

삭제는 실제로 삭제되지 않고 사용하지 않음 처리되어 테이블에 남아있다.

따라서 데이터 양이 방대하며 데이터 변경보다 검색을 자주하는 경우에 인덱스를 사용하는 것이 좋음.

**해시 테이블 인덱스**

해시 테이블: 속성 값으로 해시 값을 계산해 인덱싱 하는 방법

속성 값을 온전하게 입력할 때만 검색을 사용할 수 있다.

**B+- 트리 인덱스**

트리 구조의 B+ 트리 인덱스 또는 B- 트리 인덱스 방식을 많이 사용. 

B는 Balanced를 의미한다. 

B+ 트리는 단말 노드에만 데이터를 저장하고 단말 노드 간에는 연결 리스트로 연결되는 방식이다.

B- 트리는 모든 노드에 데이터가 저장되는 방식이다.

# 3.2.4 ORM

ORM(Object-Relational Mapping)

: 객체와 관계형 데이터베이스를 매핑하는 도구

객체 지향 프로그래밍 언어를 이용해 프로그램 개발 시 편리.

SQL문을 사용하지 않고 객체 지향적 코드를 작성할 수 있어 코드의 가독성을 높이고 개발자 편의성을 증대할 수 있음
